Spring의 기본 개념

객체 생성
Member m = new Member();
위 코드로 객체 생성 시 클래스 간 결합도가 증가하는 문제점 발생

[1] 객체 생성을 위해 도입된 개념
①
IOC (Inversion of controll : 제어의 역전)
	: 프로그램 구현에 필요한 객체를 개발자가 아닌 스프링이 생성하는 것
②
DI (Dependency Injection : 의존성 주입)
	: 스프링이 만든 객체를 개발자가 사용하는 방법



[2] 개발자는 스프링이 객체를 알아서 생성할 수 있도록 코드 구현 문법 대표 : @(어노테이션)
- IOC를 통한 어노테이션을 사용하여 객체 생성하는 절차
	(1) 스프링이 모든 클래스의 객체를 만들어 주는 건 아니다.
		▶ 객체를 만드려는 클래스는 기본 패키지(com.green.name) 안에 있어야 한다.
		▶ 기본 패키지 외의 선언된 클래스는 객체 생성 불가

	(2) 클래스명 위에 객체 생성 어노테이션을 선언하면 자동으로 객체가 만들어진다.
		▶ 객체 생성 어노테이션 (Spring의 어노테이션 종류.txt 참고)
			: @Controller / @Service() / @Configuration / @Repository

- DI를 통한 의존성 주입 방법 (생성된 객체 사용 방법)
	(1) 생성된 객체를 사용할 때도 어노테이션 적용
		▶ 객체 호출 어노테이션 (Spring의 어노테이션 종류.txt 참고)
			: @Resource() / @Autowired